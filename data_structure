{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "Untitled13.ipynb",
      "provenance": []
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "code",
      "execution_count": 1,
      "metadata": {
        "id": "l6s2oYLroBfd"
      },
      "outputs": [],
      "source": [
        ""
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "#Data structure\n",
        "#list"
      ],
      "metadata": {
        "id": "4ZrD0URaKOTN"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "a= [2,4,5,4,\"history\",\"hero\", True, False,\"business\"]\n",
        "dir(a)\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "O_tsPGn5oNSg",
        "outputId": "fcec50f2-e8af-4227-ae02-9bcc6c7dc92e"
      },
      "execution_count": 3,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "['__add__',\n",
              " '__class__',\n",
              " '__contains__',\n",
              " '__delattr__',\n",
              " '__delitem__',\n",
              " '__dir__',\n",
              " '__doc__',\n",
              " '__eq__',\n",
              " '__format__',\n",
              " '__ge__',\n",
              " '__getattribute__',\n",
              " '__getitem__',\n",
              " '__gt__',\n",
              " '__hash__',\n",
              " '__iadd__',\n",
              " '__imul__',\n",
              " '__init__',\n",
              " '__init_subclass__',\n",
              " '__iter__',\n",
              " '__le__',\n",
              " '__len__',\n",
              " '__lt__',\n",
              " '__mul__',\n",
              " '__ne__',\n",
              " '__new__',\n",
              " '__reduce__',\n",
              " '__reduce_ex__',\n",
              " '__repr__',\n",
              " '__reversed__',\n",
              " '__rmul__',\n",
              " '__setattr__',\n",
              " '__setitem__',\n",
              " '__sizeof__',\n",
              " '__str__',\n",
              " '__subclasshook__',\n",
              " 'append',\n",
              " 'clear',\n",
              " 'copy',\n",
              " 'count',\n",
              " 'extend',\n",
              " 'index',\n",
              " 'insert',\n",
              " 'pop',\n",
              " 'remove',\n",
              " 'reverse',\n",
              " 'sort']"
            ]
          },
          "metadata": {},
          "execution_count": 3
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "a"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "RDIYLykWojFO",
        "outputId": "ffdd1c36-c2af-4d5b-f7de-c2e063b0bc09"
      },
      "execution_count": 4,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "[2, 4, 5, 4, 'history', 'hero', True, False, 'business']"
            ]
          },
          "metadata": {},
          "execution_count": 4
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "a.append(4)\n",
        "a\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "9c6GLUjVo7-P",
        "outputId": "a8bfe007-5eb3-42bf-fdcd-7b0dcc7841f6"
      },
      "execution_count": 6,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "[2, 4, 5, 4, 'history', 'hero', True, False, 'business', 4, 4]"
            ]
          },
          "metadata": {},
          "execution_count": 6
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "#in the 'list' data structure if you already have the same value before, you can also append the same value again ana again"
      ],
      "metadata": {
        "id": "Y7i9_UbMKWbK"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "a.clear()\n",
        "a"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "bbbPbExwpckk",
        "outputId": "81188b4e-8b5d-4a38-f28c-1869c50fa60d"
      },
      "execution_count": 12,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "[]"
            ]
          },
          "metadata": {},
          "execution_count": 12
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "#  clear is 'list' can erase all your data from the list"
      ],
      "metadata": {
        "id": "DBXOj2GEKmAe"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "b=[1,4,3,6,7,\"hill\",\"road\"]\n",
        "b\n",
        "b.count(4)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "0P9B2RQBqm9l",
        "outputId": "2ead04c1-a724-4530-e53d-d9e0a6876e83"
      },
      "execution_count": 16,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "1"
            ]
          },
          "metadata": {},
          "execution_count": 16
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# in the 'list' data structure count gives you the exact number of the particular value u have choosen"
      ],
      "metadata": {
        "id": "ZJC31rrPKsyC"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "b.insert(3,'jasos')\n",
        "b\n",
        "# to insert any value in the 'list' u need to write insert and then (position,value) "
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "0bGsCFh_r1Cj",
        "outputId": "c7cb2a87-d888-4f58-9d95-624400586f4b"
      },
      "execution_count": 19,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "[1, 4, 3, 'jasos', 'jasos', 'jasos', 6, 7, 'hill', 'road']"
            ]
          },
          "metadata": {},
          "execution_count": 19
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "b.pop()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 35
        },
        "id": "2gQk-b7Isj3w",
        "outputId": "32e60f4f-5c05-4f64-e2e4-19bfe622c34c"
      },
      "execution_count": 20,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "'road'"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "string"
            }
          },
          "metadata": {},
          "execution_count": 20
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "#used to deduct the last item from the list"
      ],
      "metadata": {
        "id": "qVGRxB7ZK0Jr"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "b.remove(3)\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 183
        },
        "id": "LIlz5Vxys1R2",
        "outputId": "38dd3bc5-22d8-4d50-da30-8c3cf0a4000e"
      },
      "execution_count": 23,
      "outputs": [
        {
          "output_type": "error",
          "ename": "ValueError",
          "evalue": "ignored",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mValueError\u001b[0m                                Traceback (most recent call last)",
            "\u001b[0;32m<ipython-input-23-b52f8e0beafd>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mb\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mremove\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;36m3\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      2\u001b[0m \u001b[0mb\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;31mValueError\u001b[0m: list.remove(x): x not in list"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "b.remove('jasos') "
      ],
      "metadata": {
        "id": "PKDLA-8stdXa"
      },
      "execution_count": 40,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "# to remove any value from the list"
      ],
      "metadata": {
        "id": "kgy13kCDK7TH"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "b"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "YNEaevYvtn6E",
        "outputId": "1fed4be4-446b-4cc7-85fa-d3959bfa6dc6"
      },
      "execution_count": 41,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "['hill', 7, 6, 4, 1]"
            ]
          },
          "metadata": {},
          "execution_count": 41
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "c=[1,5,-3,8,34,-56,2,0,7]\n",
        "c.sort()"
      ],
      "metadata": {
        "id": "uueJNNtAtyDd"
      },
      "execution_count": 34,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "# sort your list"
      ],
      "metadata": {
        "id": "oypP7XyhK_ZI"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "c"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "3IEDhvL9uOc_",
        "outputId": "9256c9db-4176-4c94-9967-05279df4b999"
      },
      "execution_count": 35,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "[-56, -3, 0, 1, 2, 5, 7, 8, 34]"
            ]
          },
          "metadata": {},
          "execution_count": 35
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "sorting list c result\n"
      ],
      "metadata": {
        "id": "R8_3o5HCLCjU"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "c.reverse()\n",
        "\n",
        "\n"
      ],
      "metadata": {
        "id": "1_87sh-PuwW1"
      },
      "execution_count": 37,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        " reverse your list"
      ],
      "metadata": {
        "id": "A88vgh_TLRST"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "c"
      ],
      "metadata": {
        "id": "JDWhQ0f5v9N_",
        "outputId": "a2c88ea5-fc16-4720-e988-9f9e68a6078e",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "execution_count": 39,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "[34, 8, 7, 5, 2, 1, 0, -3, -56]"
            ]
          },
          "metadata": {},
          "execution_count": 39
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "reverse result"
      ],
      "metadata": {
        "id": "-Ix_zfQPLT1_"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "c.index(8)\n",
        "# to know any values index"
      ],
      "metadata": {
        "id": "8sb31emfwZLA",
        "outputId": "d3577938-feba-4749-8d7f-31b2d862a531",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "execution_count": 45,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "3"
            ]
          },
          "metadata": {},
          "execution_count": 45
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "Y=c.copy()\n"
      ],
      "metadata": {
        "id": "EVCWXTxb4xnp"
      },
      "execution_count": 98,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "#when you need to copy the list"
      ],
      "metadata": {
        "id": "DfIv4LNVLYtt"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "Y\n"
      ],
      "metadata": {
        "id": "01xxgbf543GX",
        "outputId": "44581cab-fc38-4791-e9a8-fe7651d88e5f",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "execution_count": 99,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "[34, 8, 7, 5, 2, 1, 0, -3, -56]"
            ]
          },
          "metadata": {},
          "execution_count": 99
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# dictionary"
      ],
      "metadata": {
        "id": "Cp8Wp89h49XA"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "d={\"k1\":\"kaushik\", \"k2\":\"kar\", \"k3\":\"kriss\"}\n",
        "\n"
      ],
      "metadata": {
        "id": "X8Ja3g6NxFN1"
      },
      "execution_count": 72,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "dir(d)"
      ],
      "metadata": {
        "id": "mTEItcck2pWG",
        "outputId": "9cd5c4bf-aff5-41f0-ea17-ae5fdb62534f",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "execution_count": 87,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "['__class__',\n",
              " '__contains__',\n",
              " '__delattr__',\n",
              " '__delitem__',\n",
              " '__dir__',\n",
              " '__doc__',\n",
              " '__eq__',\n",
              " '__format__',\n",
              " '__ge__',\n",
              " '__getattribute__',\n",
              " '__getitem__',\n",
              " '__gt__',\n",
              " '__hash__',\n",
              " '__init__',\n",
              " '__init_subclass__',\n",
              " '__iter__',\n",
              " '__le__',\n",
              " '__len__',\n",
              " '__lt__',\n",
              " '__ne__',\n",
              " '__new__',\n",
              " '__reduce__',\n",
              " '__reduce_ex__',\n",
              " '__repr__',\n",
              " '__setattr__',\n",
              " '__setitem__',\n",
              " '__sizeof__',\n",
              " '__str__',\n",
              " '__subclasshook__',\n",
              " 'clear',\n",
              " 'copy',\n",
              " 'fromkeys',\n",
              " 'get',\n",
              " 'items',\n",
              " 'keys',\n",
              " 'pop',\n",
              " 'popitem',\n",
              " 'setdefault',\n",
              " 'update',\n",
              " 'values']"
            ]
          },
          "metadata": {},
          "execution_count": 87
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        ""
      ],
      "metadata": {
        "id": "zHb82XdA263q"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "d[\"k1\"]"
      ],
      "metadata": {
        "id": "IK8mPbzi0k0q",
        "outputId": "34170aa4-099c-42f0-fd95-59f7fd3783bd",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 35
        }
      },
      "execution_count": 74,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "'kaushik'"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "string"
            }
          },
          "metadata": {},
          "execution_count": 74
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "d[\"k2\"]"
      ],
      "metadata": {
        "id": "Z1AUa906xp2G",
        "outputId": "5c19daa7-615c-4e71-d9ca-07f1f790b96c",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 35
        }
      },
      "execution_count": 76,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "'kar'"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "string"
            }
          },
          "metadata": {},
          "execution_count": 76
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "d.items()"
      ],
      "metadata": {
        "id": "A5_Wo1ec0xcV",
        "outputId": "72d72c4c-d4fe-4f61-b014-fb4f0453d4b4",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "execution_count": 79,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "dict_items([('k1', 'kaushik'), ('k2', 'kar'), ('k3', 'kriss')])"
            ]
          },
          "metadata": {},
          "execution_count": 79
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "for k,v in d.items():\n",
        "  print(\"Key = \", k, end=\",\")\n",
        "  print(\" Value = \", v)"
      ],
      "metadata": {
        "id": "xxE3Nk9Z1F87",
        "outputId": "f2a6b5e2-c324-40ac-e9e0-56124a4d941e",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "execution_count": 80,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Key =  k1, Value =  kaushik\n",
            "Key =  k2, Value =  kar\n",
            "Key =  k3, Value =  kriss\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "del d[\"k3\"]\n",
        "\n"
      ],
      "metadata": {
        "id": "_DUm-1cY29kt"
      },
      "execution_count": 89,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "#to delete any key from the dictionary"
      ],
      "metadata": {
        "id": "fta1RA8RLeuV"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "d.clear()\n",
        "\n"
      ],
      "metadata": {
        "id": "ITYJZhU73PZG"
      },
      "execution_count": 91,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "# to clear all the keys in the dictionary"
      ],
      "metadata": {
        "id": "A6qbJRH5LijM"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "d= {\"name\":\"krishna\", \"class\":12, \"state\":\"west bengal\", \"height\":5.6}"
      ],
      "metadata": {
        "id": "H02jh0zt3fcW"
      },
      "execution_count": 95,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "x=d.copy()\n"
      ],
      "metadata": {
        "id": "uP_JE1Dr4KGx"
      },
      "execution_count": 96,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "#when you need to copy dicyionary"
      ],
      "metadata": {
        "id": "RYGWp4NGLlax"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "x\n"
      ],
      "metadata": {
        "id": "9cL_Gly14kVf",
        "outputId": "f89ba602-5358-40bd-e9fe-a1fb7d12c0ca",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "execution_count": 97,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "{'name': 'krishna', 'class': 12, 'state': 'west bengal', 'height': 5.6}"
            ]
          },
          "metadata": {},
          "execution_count": 97
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "key=(1,2,3)\n",
        "value=\"kaushik\""
      ],
      "metadata": {
        "id": "eDxojBVv5DZD"
      },
      "execution_count": 111,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "dict.fromkeys(key,value)\n"
      ],
      "metadata": {
        "id": "lJWCHzX17DFZ",
        "outputId": "d89b269d-29d6-4898-a904-96812fcad1f6",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "execution_count": 112,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "{1: 'kaushik', 2: 'kaushik', 3: 'kaushik'}"
            ]
          },
          "metadata": {},
          "execution_count": 112
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# fromkeys make your dictionary through list"
      ],
      "metadata": {
        "id": "FhORZZROLn60"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "d"
      ],
      "metadata": {
        "id": "t4XgD_JZ7yZn",
        "outputId": "ef26275a-6d06-4c17-fc29-23bc203d2033",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "execution_count": 118,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "{'name': 'krishna', 'class': 12, 'state': 'west bengal', 'height': 5.6}"
            ]
          },
          "metadata": {},
          "execution_count": 118
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "d.get('class')\n"
      ],
      "metadata": {
        "id": "1ncND7yd6m_n",
        "outputId": "d274088d-097e-4061-9165-4fbba239eec2",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "execution_count": 121,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "12"
            ]
          },
          "metadata": {},
          "execution_count": 121
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        " 'get' in dictionary will give you the value of the particular key"
      ],
      "metadata": {
        "id": "y3u4DEdfLq__"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "d.keys()\n"
      ],
      "metadata": {
        "id": "PjRVypa39No0",
        "outputId": "e72ae967-aaaf-4c76-d18f-8602de108cad",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "execution_count": 122,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "dict_keys(['name', 'class', 'state', 'height'])"
            ]
          },
          "metadata": {},
          "execution_count": 122
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "#this can show you the name of the keys"
      ],
      "metadata": {
        "id": "1V7X1jAQLwZP"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "d.values()\n"
      ],
      "metadata": {
        "id": "Q_mrMW7C9gUx",
        "outputId": "fc57a0f9-0941-4e16-90ae-f509bcc2f6e0",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "execution_count": 123,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "dict_values(['krishna', 12, 'west bengal', 5.6])"
            ]
          },
          "metadata": {},
          "execution_count": 123
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "#this can show you the name of the values"
      ],
      "metadata": {
        "id": "puMR72pdL5Sb"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        ""
      ],
      "metadata": {
        "id": "osPi8aueL5jW"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "d.pop('height')"
      ],
      "metadata": {
        "id": "eVBMHa7Z91vZ",
        "outputId": "d9d745a2-2c60-4dba-887a-1cd94c3326dd",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "execution_count": 125,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "5.6"
            ]
          },
          "metadata": {},
          "execution_count": 125
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# this can remove any of the key that you have mentioned in the bracket"
      ],
      "metadata": {
        "id": "soupa5jkMBcq"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        ""
      ],
      "metadata": {
        "id": "5VFkvaV3L89_"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "d.popitem()"
      ],
      "metadata": {
        "id": "T1qLLVoQ-OSr",
        "outputId": "a83a0cbd-6171-4517-c12a-df5e58a1c684",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "execution_count": 127,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "('state', 'west bengal')"
            ]
          },
          "metadata": {},
          "execution_count": 127
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# popitem mentioned the name of the key and values that get deleted"
      ],
      "metadata": {
        "id": "It6xfdYzMG2l"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "d"
      ],
      "metadata": {
        "id": "myxAN-7Y_a5a",
        "outputId": "e2f2068a-9086-41f8-82d0-3aff8758f6c2",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "execution_count": 128,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "{'name': 'krishna', 'class': 12}"
            ]
          },
          "metadata": {},
          "execution_count": 128
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "f={\"age\":23, \"play\":\"football\"}"
      ],
      "metadata": {
        "id": "Ug8eRoA9-EfJ"
      },
      "execution_count": 130,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "d.update(f)\n",
        "d"
      ],
      "metadata": {
        "id": "9R32wqKEAX4V",
        "outputId": "5c9d3ec2-83ef-48c0-a2e4-122d97bd7d4e",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "execution_count": 157,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "{'name': 'krishna', 'class': 12, 'age': 23, 'play': 'football', 'food': None}"
            ]
          },
          "metadata": {},
          "execution_count": 157
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "add any new dictionary in the existing dictionary"
      ],
      "metadata": {
        "id": "34jfcps2MxYq"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "d.setdefault(\"food\")"
      ],
      "metadata": {
        "id": "_Wr-po80AvoG"
      },
      "execution_count": 134,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "add any other key to the existing dictionary"
      ],
      "metadata": {
        "id": "IMCqId2oNQpn"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "d"
      ],
      "metadata": {
        "id": "UeAW9wTGBain",
        "outputId": "2ab1b9b8-f5e4-4cbf-e80f-6a082442b37a",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "execution_count": 135,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "{'name': 'krishna', 'class': 12, 'age': 23, 'play': 'football', 'food': None}"
            ]
          },
          "metadata": {},
          "execution_count": 135
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#tuples"
      ],
      "metadata": {
        "id": "-s1atca7NTdr"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "t=(1,2,4,6,9)"
      ],
      "metadata": {
        "id": "RIgOMtc21lF4"
      },
      "execution_count": 81,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "t[-2]"
      ],
      "metadata": {
        "id": "lVKbeKB40cDm",
        "outputId": "9a77f034-36b4-4356-bba4-b320e06300be",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "execution_count": 82,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "6"
            ]
          },
          "metadata": {},
          "execution_count": 82
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "dir(t)"
      ],
      "metadata": {
        "id": "fM2rmDnd13Yj",
        "outputId": "60a76931-67d6-404b-ea72-60763fa7fac2",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "execution_count": 84,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "['__add__',\n",
              " '__class__',\n",
              " '__contains__',\n",
              " '__delattr__',\n",
              " '__dir__',\n",
              " '__doc__',\n",
              " '__eq__',\n",
              " '__format__',\n",
              " '__ge__',\n",
              " '__getattribute__',\n",
              " '__getitem__',\n",
              " '__getnewargs__',\n",
              " '__gt__',\n",
              " '__hash__',\n",
              " '__init__',\n",
              " '__init_subclass__',\n",
              " '__iter__',\n",
              " '__le__',\n",
              " '__len__',\n",
              " '__lt__',\n",
              " '__mul__',\n",
              " '__ne__',\n",
              " '__new__',\n",
              " '__reduce__',\n",
              " '__reduce_ex__',\n",
              " '__repr__',\n",
              " '__rmul__',\n",
              " '__setattr__',\n",
              " '__sizeof__',\n",
              " '__str__',\n",
              " '__subclasshook__',\n",
              " 'count',\n",
              " 'index']"
            ]
          },
          "metadata": {},
          "execution_count": 84
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "t.count(2)\n"
      ],
      "metadata": {
        "id": "bv93EPzG2Bcf",
        "outputId": "f0771d5f-71af-4d03-a4d0-54804ecf7185",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "execution_count": 85,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "1"
            ]
          },
          "metadata": {},
          "execution_count": 85
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "in the 'tuples' data structure count gives you the exact number of the particular value u have choosen"
      ],
      "metadata": {
        "id": "U6A1UbK-DIeD"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "t.index(2)\n"
      ],
      "metadata": {
        "id": "-TUMRooH2NE5",
        "outputId": "d1415bde-fb8d-47f1-f249-b67a4d3758e3",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "execution_count": 86,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "1"
            ]
          },
          "metadata": {},
          "execution_count": 86
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "show the index of the value inside the tuple"
      ],
      "metadata": {
        "id": "PRBT3-xZNZXh"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "#datastructure_set\n",
        "s={\"flag\",\"rose\",\"register\",\"hobby\",False,True, 234, 12, 0}"
      ],
      "metadata": {
        "id": "t0AOj187DYaq"
      },
      "execution_count": 136,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "dir(s)\n"
      ],
      "metadata": {
        "id": "xpyCHUDyD5yp",
        "outputId": "36d65a3e-64ea-4a07-fbab-6c1e2803cdf9",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "execution_count": 137,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "['__and__',\n",
              " '__class__',\n",
              " '__contains__',\n",
              " '__delattr__',\n",
              " '__dir__',\n",
              " '__doc__',\n",
              " '__eq__',\n",
              " '__format__',\n",
              " '__ge__',\n",
              " '__getattribute__',\n",
              " '__gt__',\n",
              " '__hash__',\n",
              " '__iand__',\n",
              " '__init__',\n",
              " '__init_subclass__',\n",
              " '__ior__',\n",
              " '__isub__',\n",
              " '__iter__',\n",
              " '__ixor__',\n",
              " '__le__',\n",
              " '__len__',\n",
              " '__lt__',\n",
              " '__ne__',\n",
              " '__new__',\n",
              " '__or__',\n",
              " '__rand__',\n",
              " '__reduce__',\n",
              " '__reduce_ex__',\n",
              " '__repr__',\n",
              " '__ror__',\n",
              " '__rsub__',\n",
              " '__rxor__',\n",
              " '__setattr__',\n",
              " '__sizeof__',\n",
              " '__str__',\n",
              " '__sub__',\n",
              " '__subclasshook__',\n",
              " '__xor__',\n",
              " 'add',\n",
              " 'clear',\n",
              " 'copy',\n",
              " 'difference',\n",
              " 'difference_update',\n",
              " 'discard',\n",
              " 'intersection',\n",
              " 'intersection_update',\n",
              " 'isdisjoint',\n",
              " 'issubset',\n",
              " 'issuperset',\n",
              " 'pop',\n",
              " 'remove',\n",
              " 'symmetric_difference',\n",
              " 'symmetric_difference_update',\n",
              " 'union',\n",
              " 'update']"
            ]
          },
          "metadata": {},
          "execution_count": 137
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "s.add(\"kou\")\n"
      ],
      "metadata": {
        "id": "Eck9AdqGEEx4"
      },
      "execution_count": 138,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "#add can be used in the set to add and other values"
      ],
      "metadata": {
        "id": "zHE8MwELNi81"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "s"
      ],
      "metadata": {
        "id": "6ir2k2GvERoA",
        "outputId": "44e1f637-7fee-4fd2-bfda-f864464dd24c",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "execution_count": 139,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "{12, 234, False, True, 'flag', 'hobby', 'kou', 'register', 'rose'}"
            ]
          },
          "metadata": {},
          "execution_count": 139
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "#all the items are in the order inside the set"
      ],
      "metadata": {
        "id": "vZ5KbKwKNrX2"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "s1=s.copy()"
      ],
      "metadata": {
        "id": "fXl5-273EpH3"
      },
      "execution_count": 143,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "# copy any set to another set"
      ],
      "metadata": {
        "id": "GiOhjUgdNvaa"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "s1"
      ],
      "metadata": {
        "id": "1yD0jKpdEwuq",
        "outputId": "4148724e-9a00-433d-fd20-9582bf8541b1",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "execution_count": 144,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "{12, 234, False, True, 'flag', 'hobby', 'kou', 'register', 'rose'}"
            ]
          },
          "metadata": {},
          "execution_count": 144
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "s.clear()"
      ],
      "metadata": {
        "id": "BBfYatiiFSfj"
      },
      "execution_count": 145,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "#to remove all the item inside the set"
      ],
      "metadata": {
        "id": "wes8LwkMN0bt"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "s"
      ],
      "metadata": {
        "id": "Q2tz_2voFXFy",
        "outputId": "bd09dc2e-edc8-4971-8a29-fbcab444533c",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "execution_count": 146,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "set()"
            ]
          },
          "metadata": {},
          "execution_count": 146
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "s2={\"human\",\"race\",\"behind\",\"class\",\"uniform\"}"
      ],
      "metadata": {
        "id": "bQmqlEhtFccB"
      },
      "execution_count": 147,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "s2.pop()"
      ],
      "metadata": {
        "id": "WQGdfNDwGfgP",
        "outputId": "2e26f8bc-80f6-4b9b-f9ac-bd888ac817e2",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 35
        }
      },
      "execution_count": 148,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "'class'"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "string"
            }
          },
          "metadata": {},
          "execution_count": 148
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# pop can deduct the last item from the set"
      ],
      "metadata": {
        "id": "jgsXNjDsN25F"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "s2"
      ],
      "metadata": {
        "id": "3Szh8k5ZG8Us",
        "outputId": "30f19c10-91dd-4530-b567-ee5c12d2cb8e",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "execution_count": 149,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "{'behind', 'human', 'race', 'uniform'}"
            ]
          },
          "metadata": {},
          "execution_count": 149
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "s2.remove(\"human\")"
      ],
      "metadata": {
        "id": "ISVcjXnbHVZV"
      },
      "execution_count": 150,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "#it remove the mentioned item from the set"
      ],
      "metadata": {
        "id": "aXmIs05gN5jq"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "s2"
      ],
      "metadata": {
        "id": "b3WgLmXiHf1Q",
        "outputId": "18f2d9bf-4dbb-4715-f4d0-40b79a782c8b",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "execution_count": 151,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "{'behind', 'race', 'uniform'}"
            ]
          },
          "metadata": {},
          "execution_count": 151
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "s3={\"hair\",\"life\",\"green\",\"medicine\"}"
      ],
      "metadata": {
        "id": "JlRp_g05HqDO"
      },
      "execution_count": 152,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "s2.union(s3)"
      ],
      "metadata": {
        "id": "w2Zo3Bu7IfJW",
        "outputId": "aa16bf5b-22ec-46a1-a08f-a0092fc2a6dc",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "execution_count": 153,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "{'behind', 'green', 'hair', 'life', 'medicine', 'race', 'uniform'}"
            ]
          },
          "metadata": {},
          "execution_count": 153
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "#union means all the value under the sets s2 and s3 are in the same set"
      ],
      "metadata": {
        "id": "iegguxUKN8l2"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "s2.intersection(s3)"
      ],
      "metadata": {
        "id": "hzSlrMWzIuaz",
        "outputId": "1b2d7244-2c46-41fc-b1b3-7841b8d13bb8",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "execution_count": 154,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "set()"
            ]
          },
          "metadata": {},
          "execution_count": 154
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# only the common values between the two sets can be there. As you have seen there is no common value so the set it null"
      ],
      "metadata": {
        "id": "RYcVb71qOAvU"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "s2.update(s3)\n",
        "s2 "
      ],
      "metadata": {
        "id": "wC0apxjEI-FT",
        "outputId": "85d6bc24-2697-49b3-f61f-e3ea6f133849",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "execution_count": 156,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "{'behind', 'green', 'hair', 'life', 'medicine', 'race', 'uniform'}"
            ]
          },
          "metadata": {},
          "execution_count": 156
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "## update is used to add some other set to the existing set"
      ],
      "metadata": {
        "id": "kVIgXAKHOEh8"
      }
    },
    {
      "cell_type": "code",
      "source": [
        ""
      ],
      "metadata": {
        "id": "Lh0VwNSGJm0J"
      },
      "execution_count": null,
      "outputs": []
    }
  ]
}